[gd_scene load_steps=36 format=4 uid="uid://bob4cono2210x"]

[ext_resource type="Script" uid="uid://buyxwg18seq7k" path="res://scripts/main_menu.gd" id="1_l6cm7"]
[ext_resource type="Texture2D" uid="uid://cpupwhky1dhdp" path="res://assets/imports/Button atlas.jpg" id="2_flqon"]
[ext_resource type="Texture2D" uid="uid://bie4sefrojm5b" path="res://assets/Постеризация 1.png" id="2_rcqid"]
[ext_resource type="MeshLibrary" uid="uid://o0cyi1eyon7h" path="res://new_mesh_lib.tres" id="3_bqqt6"]
[ext_resource type="Shader" uid="uid://cvgyuhtt27ehl" path="res://assets/shaders/pixelate.gdshader" id="3_wu84c"]
[ext_resource type="PackedScene" uid="uid://cpkpu723k1j3g" path="res://scenes/blood_particles.tscn" id="5_8ln24"]
[ext_resource type="Material" uid="uid://lf8uhiy1sssu" path="res://assets/main_material.tres" id="6_oa1go"]
[ext_resource type="Texture2D" uid="uid://cg2lfyv26n6fm" path="res://assets/main_texture.jpg" id="6_rtw2f"]
[ext_resource type="Texture2D" uid="uid://cxtpcm3xnpdxr" path="res://assets/grass_texture.jpg" id="7_tbmy8"]
[ext_resource type="PackedScene" uid="uid://bkj0bo25nmbqj" path="res://scenes/tiles/prop_flowers.tscn" id="9_jk1qb"]
[ext_resource type="PackedScene" uid="uid://bhfrtsb4njtdq" path="res://scenes/tiles/2x2_tree.tscn" id="10_5dd4i"]

[sub_resource type="Curve3D" id="Curve3D_bqqt6"]
closed = true
bake_interval = 15.0
_data = {
"points": PackedVector3Array(0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1.5, 0, 1.5, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, -1.5, 0, 1.5, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, -1.5, 0, -1.5, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 1.465, 0, -1.335),
"tilts": PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0)
}
point_count = 8

[sub_resource type="GDScript" id="GDScript_bqqt6"]
script/source = "extends PathFollow3D

func _physics_process(delta: float) -> void:
	progress_ratio += delta * 0.1
"

[sub_resource type="GDScript" id="GDScript_wu84c"]
script/source = "extends Camera3D

func _physics_process(_delta: float) -> void:
	look_at($\"../../..\".global_position)
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8ln24"]
shader = ExtResource("3_wu84c")
shader_parameter/pixel_size = 2
shader_parameter/screen_size = Vector2(1280, 720)

[sub_resource type="Shader" id="Shader_smehm"]
code = "//SHADER ORIGINALY CREADED BY \"TimothyLottes\" FROM SHADERTOY
//PORTED AND MODIFYED TO GODOT BY AHOPNESS (@ahopness)
//LICENSE : CC0
//COMATIBLE WITH : GLES2, GLES3, WEBGL
//SHADERTOY LINK : https://www.shadertoy.com/view/MsjXzh

// PUBLIC DOMAIN CRT STYLED SCAN-LINE SHADER
//
//   by Timothy Lottes
//
// This is more along the style of a really good CGA arcade monitor.
// With RGB inputs instead of NTSC.
// The shadow mask example has the mask rotated 90 degrees for less chromatic aberration.
//
// Left it unoptimized to show the theory behind the algorithm.
//
// It is an example what I personally would want as a display option for pixel art games.
// Please take and use, change, or whatever.

shader_type canvas_item;

// Emulated input resolution.
uniform vec2 res;
uniform sampler2D SCREEN_TEXTURE : hint_screen_texture;
// Mask type
//  0 = Very compressed TV style shadow mask
//  1 = Stretched VGA style shadow mask (same as prior shaders)
//  2 = VGA style shadow mask 
uniform int mask_type :hint_range(0, 2) = 0;

// Bloom Type
//  0 = Normalized exposure
//  1 = Aditive bloom
//  2 = No Bloom
uniform int bloom_type :hint_range(0, 2) = 0;

// Hardness of scanline.
//  -8.0 = soft
// -16.0 = medium
uniform float hardScan :hint_range(-12.0, -1.0) = -8.0;

// Hardness of pixels in scanline.
// -2.0 = soft
// -4.0 = hard
uniform float hardPix :hint_range(-4.0, 0.0) = -2.0;

// Hardness of short vertical bloom.
//  -1.0 = wide to the point of clipping (bad)
//  -1.5 = wide
//  -4.0 = not very wide at all
uniform float hardBloomScan :hint_range(-4.0, 0.0) = -2.0;

// Hardness of short horizontal bloom.
//  -0.5 = wide to the point of clipping (bad)
//  -1.0 = wide
//  -2.0 = not very wide at all
uniform float hardBloomPix :hint_range(-2.0, 0.0) = -1.5;

// Amount of small bloom effect.
//  1.0/1.0 = only bloom
//  1.0/16.0 = what I think is a good amount of small bloom
//  0.0     = no bloom
uniform float bloomAmount :hint_range(1.0, 16.0) = 16.0;

// Display warp.
// 0.0 = none
// 1.0/8.0 = extreme
uniform vec2 warp = vec2(64.0, 24.0); 

// Amount of shadow mask.
uniform float maskDark  :hint_range(0.0, 1.0) = 0.5;
uniform float maskLight :hint_range(1.0, 2.0) = 1.5;

//------------------------------------------------------------------------

// sRGB to Linear.
// Assuing using sRGB typed textures this should not be needed.
float ToLinear1(float c){ return(c <= 0.04045) ? c / 12.92 : pow((c + 0.055) / 1.055, 2.4); }
vec3 ToLinear(vec3 c){ return vec3(ToLinear1(c.r), ToLinear1(c.g), ToLinear1(c.b)); }

// Linear to sRGB.
// Assuing using sRGB typed textures this should not be needed.
float ToSrgb1(float c){ return(c < 0.0031308?c * 12.92 : 1.055 * pow(c, 0.41666) - 0.055); }
vec3 ToSrgb(vec3 c){ return vec3(ToSrgb1(c.r), ToSrgb1(c.g), ToSrgb1(c.b)); }

// Nearest emulated sample given floating point position and texel offset.
// Also zero's off screen.
vec3 Fetch(vec2 pos, vec2 off, sampler2D iChannel0){
	pos = floor(pos * res + off) / res;
	
	if(max(abs(pos.x - 0.5), abs(pos.y - 0.5)) > 0.5){
		return vec3(0.0, 0.0, 0.0);
	}
	
	return ToLinear(texture(iChannel0 , pos.xy , -16.0).rgb);
}

// Distance in emulated pixels to nearest texel.
vec2 Dist(vec2 pos){ 
	pos = pos * res; 
	return - ((pos - floor(pos)) - vec2(0.5));
}
    
// 1D Gaussian.
float Gaus(float pos, float scale){ return exp2(scale * pos * pos); }

// 3-tap Gaussian filter along horz line.
vec3 Horz3(vec2 pos, float off, sampler2D iChannel0){
	vec3 b = Fetch(pos, vec2(-1.0, off), iChannel0);
	vec3 c = Fetch(pos, vec2( 0.0, off), iChannel0);
	vec3 d = Fetch(pos, vec2( 1.0, off), iChannel0);
	float dst = Dist(pos).x;
	
	// Convert distance to weight.
	float scale = hardPix;
	float wb = Gaus(dst - 1.0, scale);
	float wc = Gaus(dst + 0.0, scale);
	float wd = Gaus(dst + 1.0, scale);
	
	// Return filtered sample.
	return (b * wb + c * wc + d * wd) / (wb + wc + wd);
}
// 5-tap Gaussian filter along horz line.
vec3 Horz5(vec2 pos, float off, sampler2D iChannel0){
	vec3 a = Fetch(pos, vec2(-2.0, off), iChannel0);
	vec3 b = Fetch(pos, vec2(-1.0, off), iChannel0);
	vec3 c = Fetch(pos, vec2( 0.0, off), iChannel0);
	vec3 d = Fetch(pos, vec2( 1.0, off), iChannel0);
	vec3 e = Fetch(pos, vec2( 2.0, off), iChannel0);
	float dst = Dist(pos).x;
	
	// Convert distance to weight.
	float scale = hardPix;
	float wa = Gaus(dst - 2.0, scale);
	float wb = Gaus(dst - 1.0, scale);
	float wc = Gaus(dst + 0.0, scale);
	float wd = Gaus(dst + 1.0, scale);
	float we = Gaus(dst + 2.0, scale);
	
	// Return filtered sample.
	return (a * wa + b * wb + c * wc + d * wd + e * we) / (wa + wb + wc + wd + we);
}
// 7-tap Gaussian filter along horz line.
vec3 Horz7(vec2 pos, float off, sampler2D iChannel0){
	vec3 a = Fetch(pos, vec2(-3.0, off), iChannel0);
	vec3 b = Fetch(pos, vec2(-2.0, off), iChannel0);
	vec3 c = Fetch(pos, vec2( 1.0, off), iChannel0);
	vec3 d = Fetch(pos, vec2( 0.0, off), iChannel0);
	vec3 e = Fetch(pos, vec2( 1.0, off), iChannel0);
	vec3 f = Fetch(pos, vec2( 2.0, off), iChannel0);
	vec3 g = Fetch(pos, vec2( 3.0, off), iChannel0);
	float dst = Dist(pos).x;
	
	// Convert distance to weight.
	float scale = hardBloomPix;
	float wa = Gaus(dst - 3.0, scale);
	float wb = Gaus(dst - 2.0, scale);
	float wc = Gaus(dst - 1.0, scale);
	float wd = Gaus(dst + 0.0, scale);
	float we = Gaus(dst + 1.0, scale);
	float wf = Gaus(dst + 2.0, scale);
	float wg = Gaus(dst + 3.0, scale);
	
	// Return filtered sample.
	return (a * wa + b * wb + c * wc + d * wd + e * we + f * wf + g * wg) / (wa + wb + wc + wd + we + wf + wg);
}

// Return scanline weight.
float Scan(vec2 pos, float off){
	float dst = Dist(pos).y;
	
	return Gaus(dst + off, hardScan);
}

// Return scanline weight for bloom.
float BloomScan(vec2 pos, float off){
	float dst = Dist(pos).y;
	
	return Gaus(dst + off, hardBloomScan);
}

// Allow nearest three lines to effect pixel.
vec3 Tri(vec2 pos, sampler2D iChannel0){
	vec3 a = Horz3(pos,-1.0, iChannel0);
	vec3 b = Horz5(pos, 0.0, iChannel0);
	vec3 c = Horz3(pos, 1.0, iChannel0);
	
	float wa = Scan(pos,-1.0);
	float wb = Scan(pos, 0.0);
	float wc = Scan(pos, 1.0);
	
	return a * wa + b * wb + c * wc;
}

// Small bloom.
vec3 Bloom(vec2 pos, sampler2D iChannel0){
	vec3 a = Horz5(pos,-2.0, iChannel0);
	vec3 b = Horz7(pos,-1.0, iChannel0);
	vec3 c = Horz7(pos, 0.0, iChannel0);
	vec3 d = Horz7(pos, 1.0, iChannel0);
	vec3 e = Horz5(pos, 2.0, iChannel0);
	
	float wa = BloomScan(pos,-2.0);
	float wb = BloomScan(pos,-1.0);
	float wc = BloomScan(pos, 0.0);
	float wd = BloomScan(pos, 1.0);
	float we = BloomScan(pos, 2.0);
	
	return a * wa + b * wb + c * wc + d * wd + e * we;
}

// Distortion of scanlines, and end of screen alpha.
vec2 Warp(vec2 pos){
	pos = pos * 2.0 - 1.0;    
	pos *= vec2(1.0 + (pos.y * pos.y) * 1.0 / warp.x, 1.0 + (pos.x * pos.x) * 1.0/ warp.y);
	
	return pos * 0.5+0.5;
}

vec3 Mask(vec2 pos){
	if (mask_type == 0){
		float line = maskLight;
		float odd = 0.0;
		
		if(fract(pos.x / 6.0) < 0.5) odd = 1.0;
		if(fract((pos.y + odd) / 2.0) < 0.5) line = maskDark;  
		pos.x = fract(pos.x / 3.0);
		
		vec3 mask = vec3(maskDark, maskDark, maskDark);
		if(pos.x < 0.333)mask.r = maskLight;
		else if(pos.x < 0.666)mask.g = maskLight;
		else mask.b = maskLight;
		
		mask *= line;
		return mask;
	}else if (mask_type == 1){
		pos.x += pos.y * 3.0;
		
		vec3 mask = vec3(maskDark, maskDark, maskDark);
		pos.x = fract(pos.x / 6.0);
		if(pos.x < 0.333)mask.r = maskLight;
		else if(pos.x < 0.666)mask.g = maskLight;
		else mask.b = maskLight;
		
		return mask;
	}else if (mask_type == 2){
		pos.xy = floor(pos.xy * vec2(1.0, 0.5));
		pos.x += pos.y * 3.0;
		
		vec3 mask = vec3(maskDark, maskDark, maskDark);
		pos.x = fract(pos.x / 6.0);
		if(pos.x < 0.333)mask.r = maskLight;
		else if(pos.x < 0.666)mask.g = maskLight;
		else mask.b = maskLight;
	
		return mask;
	}
  }    

// Draw dividing bars.
float Bar(float pos, float bar){ pos -= bar; return pos * pos < 4.0 ? 0.0 : 1.0; }

// Entry.
void fragment(){
	vec2 pos = Warp(FRAGCOORD.xy / (1.0 / SCREEN_PIXEL_SIZE).xy);
	
	COLOR.rgb = Tri(pos, SCREEN_TEXTURE) * Mask(FRAGCOORD.xy);
	if (bloom_type == 0){ 
		COLOR.rgb = mix(COLOR.rgb,Bloom(pos, SCREEN_TEXTURE), 1.0 / bloomAmount);    
	}else if (bloom_type == 1){
		COLOR.rgb += Bloom(pos, SCREEN_TEXTURE) * 1.0 / bloomAmount;    
	} 
	
	COLOR.a = 1.0;  
	COLOR.rgb = ToSrgb(COLOR.rgb);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_rtw2f"]
shader = SubResource("Shader_smehm")
shader_parameter/res = Vector2(1280, 720)
shader_parameter/mask_type = 2
shader_parameter/bloom_type = 2
shader_parameter/hardScan = -11.144
shader_parameter/hardPix = -1.224
shader_parameter/hardBloomScan = -1.184
shader_parameter/hardBloomPix = -0.52
shader_parameter/bloomAmount = 16.0
shader_parameter/warp = Vector2(1280, 720)
shader_parameter/maskDark = 0.806
shader_parameter/maskLight = 2.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ywchj"]
resource_name = "Material.002"
cull_mode = 2
albedo_texture = ExtResource("7_tbmy8")
roughness = 0.5

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_qhy83"]
resource_name = "Material.003"
cull_mode = 2
albedo_texture = ExtResource("7_tbmy8")
roughness = 0.5

[sub_resource type="ArrayMesh" id="ArrayMesh_nqf8h"]
_surfaces = [{
"aabb": AABB(-1.14506, -0.0888429, -0.588416, 1.24039, 1.73966, 1.19567),
"format": 34896613377,
"index_count": 36,
"index_data": PackedByteArray("AAABAAIAAAADAAEABAACAAEAAwAEAAEABQAAAAIAAwAAAAUABAAGAAIABQACAAYAAwAHAAQAAwAFAAcABwAGAAQABwAFAAYA"),
"name": "Material.002",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 8,
"vertex_data": PackedByteArray("EfAAAHi9AAAAAArxNQAAAGYCMvD//wAA1+5uAJE6AAAgH///AAAAAP//pwdcvQAAhiEm/8n/AADE/hYIdjoAAA==")
}, {
"aabb": AABB(0.00260985, -0.040477, -0.542463, 1.3353, 1.61671, 1.10376),
"format": 34896613377,
"index_count": 36,
"index_data": PackedByteArray("AAABAAIAAAADAAEABAACAAEAAwAEAAEABQAAAAIAAwAAAAUABAAGAAIABQACAAYAAwAHAAQAAwAFAAcABwAGAAQABwAFAAYA"),
"name": "Material.003",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 8,
"vertex_data": PackedByteArray("AABMCZbCAAAn8v//NQAAAPLx9f7//wAANABVCsk0AAD//7L2AAAAANcNAAB4wgAAyv+p9cn/AAAMDgkBqzQAAA==")
}]
blend_shape_mode = 0

[sub_resource type="ArrayMesh" id="ArrayMesh_jk1qb"]
resource_name = "grass_Cube_022"
_surfaces = [{
"aabb": AABB(-1.14506, -0.0888429, -0.588416, 1.24039, 1.73966, 1.19567),
"attribute_data": PackedByteArray("skZB5TVOvt01TkHlska+3bJGvt01TjvWNU6+3bJGO9ayRjvWNU64zjVOO9ayRrjOska4zjVONcc1TrjOskY1xy8/O9ayRrjOskY71i8/uM41TjvWuFW4zrhVO9Y1TrjO"),
"format": 34896613399,
"index_count": 36,
"index_data": PackedByteArray("AAABAAIAAAADAAEABAAFAAYABAAHAAUACAAJAAoACAALAAkADAANAA4ADAAPAA0AEAARABIAEAATABEAFAAVABYAFAAXABUA"),
"material": SubResource("StandardMaterial3D_ywchj"),
"name": "Material.002",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 24,
"vertex_data": PackedByteArray("EfAAAHi9A+YAAArxNQBM4mYCMvD//83g1+5uAJE6pOjX7m4AkTo0+yAf//8AAEL7AAAK8TUAQvvE/hYIdjoz+8T+Fgh2OnflhiEm/8n/yuEgH///AABO4P//pwdcvRLo//+nB1y9D9lmAjLw//9u14YhJv/J/2HXEfAAAHi9KdnX7m4AkTrFw///pwdcvcXDxP4WCHY6xcMR8AAAeL3FwyAf//8AAM7uZgIy8P//zu4AAArxNQDO7oYhJv/J/87uLM7v5PHKveePyfDoU9AR4/pTHi9jVdQtb1XJLeNTMi8DMakcSDTtGaw1wxjWLnwedwQQ91QE4fZTBOD2eQQT94oYkU+KGJFPihiRT4oYkU88b2a3PG9mtzxvZrc8b2a3")
}, {
"aabb": AABB(0.00260985, -0.040477, -0.542463, 1.3353, 1.61671, 1.10376),
"attribute_data": PackedByteArray("YElp5wxOveIMTmnnYEm94mBJveIMThLeDE694mBJEt5gSRLeDE5m2QxOEt5gSWbZYElm2QxOutQMTmbZYEm61LREEt5gSWbZYEkS3rREZtkMThLeuFJm2bhSEt4MTmbZ"),
"format": 34896613399,
"index_count": 36,
"index_data": PackedByteArray("AAABAAIAAAADAAEABAAFAAYABAAHAAUACAAJAAoACAALAAkADAANAA4ADAAPAA0AEAARABIAEAATABEAFAAVABYAFAAXABUA"),
"material": SubResource("StandardMaterial3D_qhy83"),
"name": "Material.003",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 24,
"vertex_data": PackedByteArray("AABMCZbCCMgn8v//NQAfxvLx9f7//2/FNABVCsk0Vsk0AFUKyTRL/v//svYAAEv+J/L//zUAS/4MDgkBqzRL/gwOCQGrNJnIyv+p9cn/qsb//7L2AAD3xdcNAAB4wunJ1w0AAHjCkKTy8fX+//+QpMr/qfXJ/5CkAABMCZbCkKQ0AFUKyTT8xNcNAAB4wvzEDA4JAas0/MQAAEwJlsL8xP//svYAALzs8vH1/v//vOwn8v//NQC87Mr/qfXJ/7zsK+IvvrXdGr/r23i/5uSevYksU1iJLFNYiSxTWIksU1g1HRRCpSEmQW4jxkB8GqZCQg4u+EIOLvhCDi74Qg4u+AA1bJoANWyaADVsmgA1bJoENn0TBDZ+EwQ2fRMENn4T")
}]
blend_shape_mode = 0
shadow_mesh = SubResource("ArrayMesh_nqf8h")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_t12vh"]
resource_name = "Material.013"
cull_mode = 2
albedo_texture = ExtResource("6_rtw2f")
roughness = 0.5

[sub_resource type="ArrayMesh" id="ArrayMesh_oa1go"]
resource_name = "main_olen_005"
_surfaces = [{
"aabb": AABB(-2.29305, -0.978972, -5.10457, 4.90328, 7.0255, 7.06052),
"attribute_data": PackedByteArray("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"),
"bone_aabbs": [AABB(-0.469083, 2.61008, -1.65828, 0.857228, 2.2488, 1.15419), AABB(-0.00768735, 4.84431, -1.27775, 0.270695, 0.786597, 0.140494), AABB(-0.546992, 4.84334, -1.14946, 1.09006, 1.20318, 1.22378), AABB(-2.29305, -0.978972, -5.10457, 4.90328, 3.9383, 7.06052)],
"format": 34359745559,
"index_count": 678,
"index_data": PackedByteArray("IgEjAQAAIwEiASQBIwEkASUBJAEiASYBJAEmAQEACgALAAwAJwEoASkBKgErASwBAgAFAAYAAgAEAAUALQENAA4ADwAOAA0ADwANABAALgEeAB8ALgEdAB4AHQAgAB4AHwAvAS4BHwAhAC8BIQAwAS8BIgAvATABIwAvASIAIwAuAS8BLgEjACQALgEkAB0AHQAkACYAHQAxASAAHQAmADEBMQElACAAMQEmACcAMQEyASUAMQEnADIBKAApACoAKAArACkALAArACgAKwAsAC0AMwE0ARIAEwASADQBEwA0AREALgAvADAAFQA1ATYBFQA3ATUBOAEVADYBOAE2ATkBOQA6ATsAOQA6ADoBOwA8ADkAOwA9ADwAOwA6AT4AOgE/AD4AOgE7AT8AOwFBAD8AOwFCAEEAQABCADsBPAGfAJ0APQE8AZ0APQE+ATwBPQE/AT4BQAE9AZ0AQAGdAJoAPQGcAD8BQAGcAD0BPwGcAJ4AQAGbAJwAQQFmAGcAZQBmAEEBQgFlAEEBQgFDAWUAQgFoAEMBQgFEAWgAaABEAWoARAFpAGoAQwBFAUYBQwBEAEUBQwBGAEQASABDAEYBRQBGAUUBRQBFAUcASQBGAUUASABGAUcBSQBHAUYBSgBIAEcBSgBHAUkASAFJAUoBSAFLAUkBSwBMAE0ATgBPAFAATAEXAE0BTAEWABcATQEXABgATQEYAE4BTwFQATUATwE0AFABNQBQAVEBNQBRAVIBNQBSATYANgBSAVMBNgBTAVQBVAFTATcAVAE3ADgAUQBVAVYBUQBSAFUBVgFVAVMAVgFTAFQAVQBWAVQAVgBWAVUAVQBUAFcAVwFYAVkBWABaAVoAWABZAFoBWwBcAF0AXgBbAWAAXgBfAFsBYABbAWEAYABhAGIAWwFjAGEAWwFkAGMAawBsAG0AbgBvAGwAcABxAHIAcABzAHEAcwB0AHEAcwB1AHQAdgB3AHgAeQB6AHsAfAB9AH4AfAB/AH0AgACBAIIAgACDAIEAhACFAIYAhACHAIUAXAFdAV4BiACJAIoABwAIAAMABwAJAAgAXwGMAI0AjABfAY4AjQCLAF8BjQCPAIsAkACRAJIAkwCSAJEAYAExADIAYQEzAGIBlACVAJYAlwCYAJkAoAChAKIAoACiAKMApAClAGMBpABjAWQBZAFjAaYAZAGmAKcAqACpAKoAqwCsAK0AZQFmAWcBaAFlAWcBZQEZAGYBZgEZAGkBaAFqAWUBZgFpAWsBawFpARwAawEcABsAaAFsAWoBagFsAW0BbQFsAW4BbAFoARoAbAEaAG8BcAFxARQAcAFyAXEBsgCzAHMBsgBzAXQBdAFzAbQAdAG0ALUArgCvALAArgCwALEAtgC3ALgAuQC6ALcAtwC6ALsAtwC7ALgAuAC7ALwAuAC8AL0AvgC/AMAAwQDCAMMAxADFAMYAxgDFAMcAxgDHAMgAyQDGAMgAyADHAMoAyADKAMsAzADNAM4AzwDQANEA0gDTANQA1QDWANcA1QDXANgA2QDaANsA2QDbANwA3QDeAN8A4ADhAOIA4wDkAOUA5ADjAOYA5ADmAOcA6ADpAOoA6wDtAHUB6wDsAO0A7gDvAPAA8QDvAO4A8gDzAPQA9QDzAPIA9gD3APgA+QD6APsA/AD9AP4A/wAAAQEBAgEDAQQBBQEDAQIBBgEHAQgBCQEHAQYBCwF2AQwBCgELAQwBCgEMAQ0BDwF3ARABDwERAXcBDgEPARABEgETARQBFQEWARcBGAEZARoBGwEcAR0BHgEbAR0BHwEgASEB"),
"lods": [0.440348, PackedByteArray("AAABAAIAAAADAAEAAgAEAAUAAgAFAAYABwAIAAMABwAJAAgACgALAAwACgANAA4ADwAOAA0ADwANABAACwARABIAEwASABEACwAUABEACwAVABQAFQAWABQAFAAWABcAFAAXABgAFAAYABkAFAAZABoAGgAZABsAGwAZABwAHQAeAB8AHQAgAB4AHwAhAB0AIgAdACEAIwAdACIAHQAjACQAHQAlACAAHQAkACYAHQAmACUAJQAmACcAKAApACoAKAArACkALAArACgAKwAsAC0ALgAvADAALgAxADIAMAAzADQAMAA0ADUANQA0ADYANgA0ADcANgA3ADgAOQA6ADsAOwA8ADkAOwA9ADwAOwA6AD4AOgA/AD4AOgBAAD8AQABBAD8AQABCAEEAQwBEAEUAQwBGAEQARQBEAEcASABDAEUASQBIAEUASgBIAEkASwBMAE0ATgBPAFAAUQBSAFMAUQBTAFQAVQBRAFQAVgBRAFUAVQBUAFcAWABZAFoAWwBcAF0AXgBfAGAAYABfAGEAYABhAGIAXwBjAGEAXwBkAGMAZQBmAGcAZwBoAGUAZwBpAGgAaABpAGoAawBsAG0AbgBvAGwAcABxAHIAcABzAHEAcwB0AHEAcwB1AHQAdgB3AHgAeQB6AHsAfAB9AH4AfAB/AH0AgACBAIIAgACDAIEAhACFAIYAhACHAIUAiACJAIoAiwCMAI0AjACLAI4AjQCPAIsAkACRAJIAkwCSAJEAlACVAJYAlwCYAJkAmgCbAJwAmgCcAJ0AnQCcAJ4AnQCeAJ8AoAChAKIAoACiAKMApAClAKYApACmAKcAqACpAKoAqwCsAK0ArgCvALAArgCwALEAsgCzALQAsgC0ALUAtgC3ALgAuQC6ALcAtwC6ALsAtwC7ALgAuAC7ALwAuAC8AL0AvgC/AMAAwQDCAMMAxADFAMYAxgDFAMcAxgDHAMgAyQDGAMgAyADHAMoAyADKAMsAzADNAM4AzwDQANEA0gDTANQA1QDWANcA1QDXANgA2QDaANsA2QDbANwA3QDeAN8A4ADhAOIA4wDkAOUA5ADjAOYA5ADmAOcA6ADpAOoA6wDsAO0A7gDvAPAA8QDvAO4A8gDzAPQA9QDzAPIA9gD3APgA+QD6APsA/AD9AP4A/wAAAQEBAgEDAQQBBQEDAQIBBgEHAQgBCQEHAQYBCgELAQwBCgEMAQ0BDgEPARABDwERARABEgETARQBFQEWARcBGAEZARoBGwEcAR0BHgEbAR0BHwEgASEB")],
"material": SubResource("StandardMaterial3D_t12vh"),
"name": "Material.013",
"primitive": 3,
"skin_data": PackedByteArray(""),
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 376,
"vertex_data": PackedByteArray("")
}]
blend_shape_mode = 0

[sub_resource type="Skin" id="Skin_tbmy8"]
resource_name = "Skin"
bind_count = 4
bind/0/name = &"Bone"
bind/0/bone = -1
bind/0/pose = Transform3D(0.99999, -0.00444277, -0.000924009, 0.00448531, 0.998599, 0.052727, 0.000688461, -0.0527307, 0.998609, 0.0611803, -2.65365, 1.31349)
bind/1/name = &"Bone.001"
bind/1/bone = -1
bind/1/pose = Transform3D(0.999937, -0.00907982, -0.00662267, 0.00950967, 0.997636, 0.0680574, 0.00598906, -0.0681161, 0.99766, 0.0767362, -4.58443, 1.38452)
bind/2/name = &"Bone.002"
bind/2/bone = -1
bind/2/pose = Transform3D(0.952495, -0.258219, -0.161482, 0.0665306, -0.340999, 0.937706, -0.297199, -0.903904, -0.307621, 1.29317, 2.8315, 4.66619)
bind/3/name = &"neutral_bone"
bind/3/bone = -1
bind/3/pose = Transform3D(1, 0, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0)

[sub_resource type="Animation" id="Animation_5avw8"]
resource_name = "Action"
length = 0.875
loop_mode = 1
tracks/0/type = "rotation_3d"
tracks/0/imported = true
tracks/0/enabled = true
tracks/0/path = NodePath("Armature/Skeleton3D:Bone")
tracks/0/interp = 0
tracks/0/loop_wrap = true
tracks/0/keys = PackedFloat32Array(0, 1, 0.952989, 0.0443077, 0.158706, 0.254285)
tracks/1/type = "rotation_3d"
tracks/1/imported = true
tracks/1/enabled = true
tracks/1/path = NodePath("Armature/Skeleton3D:Bone.001")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = PackedFloat32Array(0, 1, -0.0641656, -0.00526966, -0.0872352, 0.994105, 0.166667, 1, -0.0625894, -0.00523065, -0.0867678, 0.994247, 0.2, 1, -0.0612313, -0.00519703, -0.0863649, 0.994367, 0.233333, 1, -0.0596548, -0.00515799, -0.085897, 0.994503, 0.333333, 1, -0.0543419, -0.00502637, -0.0843189, 0.994943, 0.366667, 1, -0.052692, -0.00498547, -0.0838284, 0.995074, 0.4, 1, -0.0512602, -0.00494997, -0.0834026, 0.995184, 0.433333, 1, -0.0501196, -0.00492169, -0.0830632, 0.995271, 0.5, 1, -0.0490033, -0.004894, -0.082731, 0.995354, 0.566667, 1, -0.0503598, -0.00492764, -0.0831347, 0.995253, 0.6, 1, -0.0517247, -0.00496149, -0.0835407, 0.995149, 0.633333, 1, -0.053414, -0.00500337, -0.084043, 0.995017, 0.666667, 1, -0.0553278, -0.00505081, -0.0846119, 0.994864, 0.7, 1, -0.0573412, -0.0051007, -0.0852101, 0.994699, 0.733333, 1, -0.0592795, -0.00514871, -0.0857856, 0.994535, 0.766667, 1, -0.0610428, -0.00519236, -0.086309, 0.994383, 0.8, 1, -0.0625315, -0.00522922, -0.0867506, 0.994252, 0.833333, 1, -0.0636458, -0.00525681, -0.0870811, 0.994152, 0.875, 1, -0.0641656, -0.00526966, -0.0872352, 0.994105)
tracks/2/type = "rotation_3d"
tracks/2/imported = true
tracks/2/enabled = true
tracks/2/path = NodePath("Armature/Skeleton3D:Bone.002")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = PackedFloat32Array(0, 1, -0.0174675, -0.310656, 0.0284399, 0.949936, 0.0666667, 1, -0.0174675, -0.310656, 0.0284399, 0.949936, 0.1, 1, -0.0190755, -0.31074, 0.028478, 0.949877, 0.133333, 1, -0.0236717, -0.310976, 0.0285867, 0.949693, 0.166667, 1, -0.0324074, -0.311407, 0.0287915, 0.949287, 0.2, 1, -0.045296, -0.311999, 0.0290896, 0.948556, 0.233333, 1, -0.060263, -0.312622, 0.02943, 0.947507, 0.266667, 1, -0.0766083, -0.313222, 0.0297945, 0.946116, 0.333333, 1, -0.110622, -0.314202, 0.0305286, 0.942395, 0.366667, 1, -0.126196, -0.314528, 0.0308537, 0.940316, 0.4, 1, -0.13967, -0.314748, 0.0311293, 0.938327, 0.433333, 1, -0.150374, -0.314882, 0.0313444, 0.936619, 0.466667, 1, -0.157644, -0.314951, 0.0314887, 0.935394, 0.5, 1, -0.16082, -0.314976, 0.0315512, 0.934843, 0.533333, 1, -0.15693, -0.314945, 0.0314746, 0.935517, 0.566667, 1, -0.148122, -0.314857, 0.0312994, 0.936987, 0.6, 1, -0.135302, -0.314683, 0.0310405, 0.938991, 0.633333, 1, -0.119386, -0.314395, 0.0307124, 0.941254, 0.666667, 1, -0.101297, -0.31397, 0.0303306, 0.943526, 0.7, 1, -0.0822176, -0.313409, 0.0299178, 0.945579, 0.733333, 1, -0.0638266, -0.31276, 0.0295101, 0.947226, 0.766667, 1, -0.0470871, -0.312078, 0.0291307, 0.948442, 0.8, 1, -0.0329581, -0.311434, 0.0288043, 0.949259, 0.833333, 1, -0.0223911, -0.310911, 0.0285565, 0.949746, 0.875, 1, -0.0174675, -0.310656, 0.0284399, 0.949936)

[sub_resource type="AnimationLibrary" id="AnimationLibrary_5655a"]
_data = {
&"Action": SubResource("Animation_5avw8")
}

[sub_resource type="ArrayMesh" id="ArrayMesh_wqhvg"]
_surfaces = [{
"aabb": AABB(-23.9275, -0.352607, -2.15761, 25.3352, 1.45677, 2.55671),
"format": 34896613377,
"index_count": 216,
"index_data": PackedByteArray("HQAFAAkABwAJAAUABgAJAAcACAAdAAkABgAIAAkABgAHAAQABwAFAAQAAAAIAAYABgAEAAEAAAAGAAEAAQAEAAMAAwAEAAUAAwAFAAAAAQADAAIAAwAAAAIAAAABAAIACAAAAAoACAAKAB0ABQALAAAACwAKAAAAHQAMAAUABQAMAAsACgAeAB0AHQAeAAwACgAfAB4ACwAfAAoADAAeAA4ADgALAAwAHwAgAB4ADgAeACAAHwAPACAADgANAAsAHwALAA0AIAANAA4AHwANAA8AIAAPAA0AEAARACEAIgAhABEAEwAhACIAEgAQACEAEwASACEAEwAiACMAIgARACMAFQASABMAEwAjACQAFQATACQAJAAjACUAJQAjABEAJQARABUAJAAlABQAJQAVABQAFQAkABQAEgAVABYAEgAWABAAEQAXABUAFwAWABUAEAAYABEAEQAYABcAFgAaABAAFwAaABYAEAAZABgAEAAaABkAJgAXABgAGAAZACYAGgAXACcAJgAnABcAGgAnABwAJgAZABsAGgAbABkAGwAnACYAGgAcABsAGwAcACcA"),
"lods": [0.287934, PackedByteArray("AAABAAIAAQADAAIAAwAAAAIAAQAEAAMAAwAEAAUAAwAFAAAABgAEAAEAAAAGAAEABgAHAAQABwAFAAQAAAAIAAYABgAJAAcABgAIAAkABwAJAAUACAAAAAoACAAKAAkABQALAAAACwAKAAAACQAMAAUABQAMAAsACQAKAAwACgALAA0ADgALAAwADAAKAA4ADgANAAsACgANAA8ADwANAA4ADgAKAA8AEAARABIAEwASABEAFAATABEAFQATABQAFQASABMAFAARABUAEgAVABYAEgAWABAAEQAXABUAFwAWABUAEAAYABEAEQAYABcAEAAZABgAGAAZABcAFgAaABAAEAAaABkAFwAaABYAGgAbABkAFwAZABsAGgAcABsAGwAcABcAGgAXABwA")],
"name": "Material.001",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 40,
"vertex_data": PackedByteArray("ouo6OM2IAADE6Ugbh+AAAFLoKBr8mwAA1OidDTibAABF6r4Ow98AAELr5SzWiAAAl+5LU4LdAAAZ78FGvtwAAL3t+FXrmQAAP+5tSSeZAABb8bF49dMAAJfyeaBlbgAA1/KEkKRuAAD2+BPlwZ0AANj4eNAwnwAAufb/////AADvdiRXg04AAIb2qyMQkAAAl9IlSn52AABMZdhC1UsAANzvjw7dkQAA//+sLU6QAAAhZUtowUEAAM/8PZY4cwAAIfWph+t0AACAN/aJEScAAMIbVZHZGAAA4hbxtrINAAAAALvDAAAAAA7xJWXLxQAApfWCmpneAABU9b+ka/UAAFP53sj15gAAEMv/PlZ3AADFXbM3rUwAAEN1AADVZAAAy3wlC/xjAABV6GkDtpIAAG+IasO+OAAA2Y+s1rQ1AAA=")
}]
blend_shape_mode = 0

[sub_resource type="ArrayMesh" id="ArrayMesh_tbmy8"]
resource_name = "Butt_1_Cube_004"
_surfaces = [{
"aabb": AABB(-23.9275, -0.352607, -2.15761, 25.3352, 1.45677, 2.55671),
"attribute_data": PackedByteArray("4NNBLkfRBzJH0cQtR9E0NmPTNDbF2cQtf9UaNrfZBzK32TQ2R9FVJUfREiH207okR9HlHGPT5Rxj0+UcXNlVJX/VdRRj03UUt9kSIbfZdRRj0zQ24NNBLn/VGjbXyOUcR9ESIdfIEiFH0eUcJuLlHCbiEiG32RIh9tO6JMXZxC3g00EuXNlVJUfRVSVH0cQtt9kSISbiVSUm4hIhR9F1FGPT5RxH0eUcY9N1FNfIEiFH0VUl18hVJUfREiF/2Y8m3deTLUDXQxx/2UMcxde3NwHVLUAB1TM3QNctQAveMzd/2RJAx9v/P/zdLUAB1TM3AdVDHN3Xky1A10Mcxde3N0DXLUB/2RJAC94zN5zdOC5/2Y8mx9sOJfbmOC783T4l9uY+JcfbQxz83UMcf9mPJn/ZQxx/1SIe9tO6JGPT5Rzg00EuR9EHMkfREiH207okpNcINrfZEiGk17gct9nlHLfZ5Rx/1SIef9V1FKTXuBx/1SIepNd1FKTXdRS32eUcpNe4HFzZVSXF2cQt4NNBLqTXCDbg00Eu9tO6JH/VIh5c2VUl9tO6JKTXuByk17gcpNcINrfZBzJ/2Y8mQNc+JcXXtzcB1bs7AdU4LgHVsCnd15Mtxde3N/zduzv83bApx9sOJfzdPiUHzD4lAdWwKQfMsCkB1T4l9uawKfzdsClA1z4lx9tDHMfbDiX83T4lx9sOJd3Xky3F17c3C94zN8fb/z8B1TguAdU+Jd3Xky0B1bApQNc+JUDXPiUB1T4lxde3NwHVuzuc3Tgu3deTLfzdsCmc3Tgu9uawKQfMsCkB1TguB8w4LgHVsCmc3Tgux9sOJfzdsCnH2/8//N27Ow=="),
"format": 34896613399,
"index_count": 216,
"index_data": PackedByteArray("TQBOAE8AUABRAAIACQBSAFMAFAAVABYAVAAFAAcAVQBWAFcAFwAYABkAFwAaABgAWAAcAB0AWAAbABwAEQBZAA4AEQBaAFkAEABbAFwAEABdAFsAXgBfAGAAXgATAF8AHgAfACAAHgBhAB8AYgAGAGMAYgBkAAYAIgBlACMAIgBmAGUADAALAAoADAANAAsAJwAoACkAJwAqACgAAAADAAEAAAAEAAMAZwBoAGkAZwBqAGgAJAAlACEAJAAmACUAKwAsAC0AKwAuACwADwBrABIAbABtAAgAbgAwAG8AcABxADUAcgBzAHQAQAB1AEEAOQA3AHYAdwB4AHkAegB7AHwAegB9AHsARwB+AH8ARwBIAH4AMQAvAIAAMQAyAC8ATACBAEsASwCBAIIASQCDAIQASQBKAIMAhQBCAIYAhQBDAEIAhwA4ADMAhwCIADgAiQA/ADsAiQA9AD8AigCLAIwAigCNAIsAPACOAI8APAA+AI4AkAA0AJEAkAA2ADQARACSAJMARABFAJIAlABGAJUAlACWAEYAlwCYAJkAlwCaAJgAmwCcAJ0AngCfADoA"),
"lods": [0.287934, PackedByteArray("AAABAAIAAAADAAEAAAAEAAMABQAGAAAABgAFAAcABgAHAAgACQAKAAsADAALAAoADAANAAsADgAPAAsADgAQAA8AEQAQAA4ADwAQABIAEgAQABMAFAAVABYAFwAYABkAFwAaABgAGwAcAB0AHgAfACAAHgAhAB8AIgAeACAAIgAgACMAJAAlACEAJAAmACUAJwAoACkAJwAqACgAKwAsAC0AKwAuACwALwAwADEAMQAyAC8AMwA0ADUAMwA2ADQANwA4ADMANwA5ADgAOQA3ADoAOwA8AD0APAA+AD0AOwA9AD8AQAA/AEEAPQBCAD8APQBDAEIARABDAD0ARABFAEMAQwBFAEYARgBFAEcARwBIAEYASQBHAEUASQBKAEcASwBJAEUATABJAEsA")],
"material": ExtResource("6_oa1go"),
"name": "Material.001",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 160,
"vertex_data": PackedByteArray("ouo6OM2ICNvE6Ugbh+BT0VLoKBr8m8PNl+5LU4Ldf9W97fhV65kP5ZfyeaBlbovFW/GxePXTUrz2+BPlwZ2Lxbn2/////+HT1OidDTibr8RF6r4Ow98ZxULr5SzWiLzIGe/BRr7cXsY/7m1JJ5knzj/ubUknmSOu1/KEkKRudMZb8bF49dPDuL3t+FXrmRSu2Ph40DCfdMa59v////8Mvb3t+FXrmaTSouo6OM2IpNJb8bF49dOk0pfuS1OC3SmnReq+DsPfKafE6Ugbh+AppxnvwUa+3Cmnufb/////3/D2+BPlwZ004dj4eNAwn7zbQuvlLNaIYf2X8nmgZW5W/aLqOjjNiGL91/KEkKRuBerU6J0NOJv6+FLoKBr8m+742Ph40DCf8+uX8nmgZW4n6vb4E+XBnRHsl+5LU4LdJMg/7m1JJ5kkyBnvwUa+3CTIve34VeuZJMjE6Ugbh+CixNTonQ04m6LEUugoGvybosRF6r4Ow9+ixO92JFeDTkL+hvarIxCQKf6X0iVKfnY8/iFlS2jBQUL+//+sLU6QIvpMZdhC1UuC7tzvjw7dkXjul9IlSn52ie7P/D2WOHNz7iFlS2jBQQD+whtVkdkYc+4AALvDAAAO/dzvjw7dkcCJTGXYQtVLxpaG9qsjEJAZipfSJUp+dsaW//+sLU6QC4qX0iVKfnb1/iFlS2jBQfX+z/w9ljhz3M8h9amH63Tdze92JFeDTnr7gDf2iREntPvP/D2WOHPrlOIW8bayDRT+AAC7wwAAG/7CG1WR2Rgm/AAAu8MAACL773YkV4NOdAEhZUtowUE8AQ7xJWXLxUHCQuvlLNaIQcI/7m1JJ5lBwqLqOjjNiMPNxOlIG4fgw81F6r4Ow9+vxELr5SzWiK/EVPW/pGv1i8XY+HjQMJ+ayqX1gpqZ3prKU/neyPXmmspT+d7I9eab7w7xJWXLxZatW/GxePXTja2l9YKamd7nuw7xJWXLxRy4VPW/pGv1ebxU9b+ka/VCtFP53sj15sm4pfWCmpneCK7X8oSQpG5V/ZfyeaBlbrW/ouo6OM2I8MJU9b+ka/WGu6LqOjjNiC35QuvlLNaIOPkO8SVly8Xnx9fyhJCkbhnHQuvlLNaIHMal9YKamd5zyaX1gpqZ3nTGVPW/pGv14dP2+BPlwZ3h0+92JFeDTin+EMv/PlZ3Kf7//6wtTpB47st8JQv8Y3juVehpA7aSuJFDdQAA1WS4kYb2qyMQkLiR//+sLU6Q9f7Zj6zWtDVz7m+IasO+OKT8gDf2iREnpPziFvG2sg2k/Exl2ELVS57/Q3UAANVknv/LfCUL/GOe/8VdszetTJ7/2Y+s1rQ1GZZviGrDvjjylRDL/z5Wdzz+whtVkdkYOv6AN/aJESce/uIW8bayDUT7gDf2iREnRfyG9qsjEJBgz///rC1OkCTRz/w9ljhzKvrCG1WR2RgO/lXoaQO2kveJxV2zN61Ml5GG9qsjEJCKkUN1AADVZJuREMv/PlZ3iJEQy/8+VnfGlsVdszetTMaW//+sLU6Qhe7LfCUL/GOB7iH1qYfrdFvthvarIxCQKO1viGrDvjhRlSH1qYfrdOKU2Y+s1rQ1WJXLfCUL/GN9/1XoaQO2kn3/3O+PDt2Rff9DdQAA1WR9/yH1qYfrdPf1gDf2iREn9/VviGrDvjj39cIbVZHZGA792Y+s1rQ1Dv3z6s82FvTZQWH4vka/75s83+NDLlr1t7Kt1+20WvW3siLT7cnNPW9KYUSnSAlUIURwS51G+GBkQC8+seWNHpNOYwaJtDU+lOWNHpNOVQcfMVYPEr1WDxK9Vg8SvYeAanOHgGpzh4Bqc4eAanOWI4kmpC81HaI0WBkUKd1iyCgtYxgp2WLMPZ4x7zBFZs0waWbLNro2RT0AMmc2AzcMsK4VDLCuFQywrhUMsK4VC0O+mwtDvpsLQ76bC0O+m4x+xByFfgUXcX7ZHIx+xBzpaQApPALUe58DxHpMAM6C8x4dZXF9VhnzHh1lSniLHeX/yVMe9leINv8cTx72V4hQ/8pPdupcAnbqXAI87LMPZuxmEGfpSQNj6TgD0P4Bme7lkwLt5ZACUutNA2PrjwPz+1r89vtX/Pe8L7P3vC+z97wvs2H4vkZh+L5GzT1vSs09b0pa9bey+Q/eT/kP3k/5D95PfiTVJWc+mORrPobkqgqQu1MFy7JTC6a84A7xMssK9TGNFY00wSgzYxTnCrTD74qzicnWtYMxqWWjMYdl6hlaTz4dwU40It1NehRVUI0ek04i0+3JItPtyYV+BReFfgUXnwPEep8DxHqO+daUjvnWlI751pR26lwC8x4dZT/p9wI/6fcCP+n3AlqErxxahLAcWoSwHFqErxzn/tZfe/8AYm9+2xzv+1787vtf/GHrhgNQ60UDRuzfDyHsQw8PauIov30XGXT/xVAV+C6Rm/Z2jVT4z5EI9LGKHvZXiB72V4j1AM98dgKne2bqNAdq6kIHRP+BYaD+lJgp/xhhPoSxHz6EsR8+hLEfPoSxH9Pp0ATT6dAE0+nQBEp4ix1KeIsd")
}]
blend_shape_mode = 0
shadow_mesh = SubResource("ArrayMesh_wqhvg")

[sub_resource type="Animation" id="Animation_4d2nq"]
resource_name = "Action"
length = 0.416667
loop_mode = 1
tracks/0/type = "position_3d"
tracks/0/imported = true
tracks/0/enabled = true
tracks/0/path = NodePath("Cube")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = PackedFloat32Array(0, 1, -0.162725, 0.255181, -0.445818, 0.0333333, 1, -0.177157, 0.278365, -0.448932, 0.0666667, 1, -0.206576, 0.325624, -0.45528, 0.1, 1, -0.244322, 0.386258, -0.463424, 0.133333, 1, -0.283733, 0.449568, -0.471928, 0.166667, 1, -0.318148, 0.504852, -0.479353, 0.2, 1, -0.33258, 0.528036, -0.482467, 0.233333, 1, -0.262729, 0.415828, -0.467396, 0.266667, 1, -0.19133, 0.301132, -0.45199, 0.3, 1, -0.15525, 0.243173, -0.444205, 0.333333, 1, -0.145491, 0.227496, -0.4421, 0.366667, 1, -0.152832, 0.239289, -0.443684, 0.4, 1, -0.159502, 0.250003, -0.445123, 0.416667, 1, -0.162725, 0.255181, -0.445818)
tracks/1/type = "rotation_3d"
tracks/1/imported = true
tracks/1/enabled = true
tracks/1/path = NodePath("Cube")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = PackedFloat32Array(0, 1, -0.10309, 0.102358, -0.450835, 0.880706, 0.0333333, 1, -0.107157, 0.0815158, -0.44154, 0.887082, 0.0666667, 1, -0.118789, 0.0360665, -0.425124, 0.896581, 0.1, 1, -0.137661, -0.0257364, -0.408005, 0.902174, 0.133333, 1, -0.161187, -0.0934644, -0.394886, 0.899638, 0.166667, 1, -0.184801, -0.154784, -0.389307, 0.889005, 0.2, 1, -0.195414, -0.180846, -0.389381, 0.881754, 0.233333, 1, -0.152817, -0.060161, -0.410498, 0.89695, 0.266667, 1, -0.113496, 0.0590701, -0.43434, 0.891616, 0.3, 1, -0.101475, 0.112709, -0.455935, 0.876997, 0.333333, 1, -0.0996233, 0.125967, -0.462681, 0.871857, 0.366667, 1, -0.100964, 0.116041, -0.457581, 0.875763, 0.4, 1, -0.102375, 0.10684, -0.453029, 0.87913, 0.416667, 1, -0.10309, 0.102358, -0.450835, 0.880706)

[sub_resource type="AnimationLibrary" id="AnimationLibrary_k4ulv"]
_data = {
&"Action": SubResource("Animation_4d2nq")
}

[node name="MainMenu" type="Node"]
script = ExtResource("1_l6cm7")

[node name="TextureRect" type="TextureRect" parent="."]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -507.0
offset_top = -309.0
offset_right = 443.0
offset_bottom = 169.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("2_rcqid")

[node name="Control" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 1

[node name="Button" type="Button" parent="Control"]
custom_minimum_size = Vector2(200, 100)
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -165.0
offset_top = 184.0
offset_right = 165.0
offset_bottom = 323.0
grow_horizontal = 2
grow_vertical = 2
text = "New Game"

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource("2_ekxnf")
volume_db = -15.0
autoplay = true

[node name="Node3D" type="Node3D" parent="."]

[node name="Path3D" type="Path3D" parent="Node3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.20326, 0)
curve = SubResource("Curve3D_bqqt6")

[node name="PathFollow3D" type="PathFollow3D" parent="Node3D/Path3D"]
transform = Transform3D(-0.948683, 0, 0.316228, 0, 1, 0, -0.316228, 0, -0.948683, 2, 0, 0)
script = SubResource("GDScript_bqqt6")

[node name="Camera3D" type="Camera3D" parent="Node3D/Path3D/PathFollow3D"]
transform = Transform3D(0.316228, 0.67082, -0.67082, 1.49012e-08, 0.707107, 0.707107, 0.948683, -0.223607, 0.223607, 0, 0, 0)
fov = 55.7
script = SubResource("GDScript_wu84c")

[node name="ColorRect2" type="ColorRect" parent="Node3D/Path3D/PathFollow3D/Camera3D"]
material = SubResource("ShaderMaterial_8ln24")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2

[node name="ColorRect3" type="ColorRect" parent="Node3D/Path3D/PathFollow3D/Camera3D"]
material = SubResource("ShaderMaterial_rtw2f")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2

[node name="GridMap" type="GridMap" parent="Node3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.03005, 0)
mesh_library = ExtResource("3_bqqt6")
cell_size = Vector3(2, 1, 2)
data = {
"cells": PackedInt32Array(0, 0, 0, 0, 65535, 655361, 65535, 0, 655361, 65535, 65535, 655360, 1, 65534, 655361, 65534, 1, 655361, 65534, 65535, 655361, 65535, 65534, 655361, 1, 0, 655361, 0, 1, 655361, 65534, 0, 655360, 65534, 65534, 655360, 0, 65534, 655360, 1, 65535, 655360, 1, 1, 655360, 65535, 1, 655360, 65537, 2, 1048578, 65536, 2, 1048579, 131071, 2, 1048578, 131070, 2, 1048579, 131069, 1, 3, 131069, 0, 2, 131069, 65535, 3, 131069, 65534, 2, 131070, 65533, 1441794, 131071, 65533, 1441795, 65536, 65533, 1441794, 65537, 65533, 1441795, 65538, 65534, 655363, 65538, 65535, 655362, 65538, 0, 655363, 65538, 1, 655362, 65538, 65533, 655364, 65538, 2, 1048580, 131069, 2, 4, 131069, 65533, 1441796, 131074, 3, 1048578, 131073, 3, 1048579, 131072, 3, 1048578, 196607, 3, 1048579, 196606, 3, 1048578, 196605, 3, 1048579, 0, 2, 1048579, 65538, 3, 1441796, 131075, 3, 1048580, 131075, 65532, 655364, 196604, 65532, 1441796, 196604, 3, 4, 196604, 65533, 2, 196604, 65534, 3, 196605, 65532, 1441794, 196606, 65532, 1441795, 131074, 65532, 1441795, 131075, 65533, 655363, 131072, 65532, 1441795, 196607, 65532, 1441794, 131073, 65532, 1441794, 131075, 65534, 655362, 131075, 0, 655362, 131075, 2, 655362, 131075, 65535, 655363, 131075, 1, 655363, 196604, 0, 3, 196604, 2, 3, 196604, 1, 2, 196604, 65535, 2)
}
metadata/_editor_floor_ = Vector3(0, 2, 0)

[node name="GPUParticles3D" parent="Node3D" instance=ExtResource("5_8ln24")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -53.3009, -0.999161)
emitting = true
one_shot = false
visibility_aabb = AABB(-9.665, -4, -4, 20, 20, 20)

[node name="Cube2" type="MeshInstance3D" parent="Node3D"]
transform = Transform3D(0.0570784, 0, 0, 0, 0.108074, 0.00684123, 0, -0.00636212, 0.116213, 0.0646148, -0.53711, 0.0288642)
material_override = ExtResource("6_oa1go")
mesh = SubResource("ArrayMesh_jk1qb")
skeleton = NodePath("")

[node name="Armature" type="Node3D" parent="."]
transform = Transform3D(0.376392, 0, 0, 0, 0.293245, 0, 0, 0, 0.320622, 0, -0.220688, -0.319306)

[node name="Skeleton3D" type="Skeleton3D" parent="Armature"]
bones/0/name = "Bone"
bones/0/parent = -1
bones/0/rest = Transform3D(0.99999, 0.00448531, 0.000688461, -0.00444277, 0.998599, -0.0527306, -0.00092401, 0.052727, 0.998609, -0.0501815, 2.71947, -1.17168)
bones/0/enabled = true
bones/0/position = Vector3(-0.0501815, 2.71947, -1.17168)
bones/0/rotation = Quaternion(0.952989, 0.0443077, 0.158706, 0.254285)
bones/0/scale = Vector3(1, 1, 1)
bones/1/name = "Bone.001"
bones/1/parent = 0
bones/1/rest = Transform3D(0.999973, 0.00501443, 0.00536978, -0.00493127, 0.999869, -0.0153901, -0.00544625, 0.0153633, 0.999867, 6.98492e-10, 1.95187, 4.47653e-08)
bones/1/enabled = true
bones/1/position = Vector3(6.98492e-10, 1.95187, 4.47653e-08)
bones/1/rotation = Quaternion(-0.0641656, -0.00526966, -0.0872352, 0.994105)
bones/1/scale = Vector3(1, 1, 1)
bones/2/name = "Bone.002"
bones/2/parent = 1
bones/2/rest = Transform3D(0.955849, 0.0634124, -0.286935, -0.259541, -0.275743, -0.925529, -0.13781, 0.959137, -0.24711, -4.19095e-09, 0.85066, -1.62399e-07)
bones/2/enabled = true
bones/2/position = Vector3(-4.19095e-09, 0.85066, -1.62399e-07)
bones/2/rotation = Quaternion(-0.0174675, -0.310656, 0.0284399, 0.949936)
bones/2/scale = Vector3(1, 1, 1)
bones/3/name = "neutral_bone"
bones/3/parent = -1
bones/3/rest = Transform3D(1, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0, 0)
bones/3/enabled = true
bones/3/position = Vector3(0, 0, 0)
bones/3/rotation = Quaternion(-0.707107, 0, 0, 0.707107)
bones/3/scale = Vector3(1, 1, 1)

[node name="olen" type="MeshInstance3D" parent="Armature/Skeleton3D"]
material_override = ExtResource("6_oa1go")
mesh = SubResource("ArrayMesh_oa1go")
skin = SubResource("Skin_tbmy8")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_5655a")
}
autoplay = "Action"

[node name="Butt_1" type="Node3D" parent="."]
transform = Transform3D(0.160027, 0, 0, 0, 0.210089, 0, 0, 0, 0.114533, -1.34653, 0, 0)

[node name="Node3D3" parent="Butt_1" instance=ExtResource("9_jk1qb")]
transform = Transform3D(-0.307205, 0, -0.468031, 0, 0.439106, 0, 0.515619, 0, -0.27859, 17.9491, -2.2922, 16.5446)

[node name="Node3D2" parent="Butt_1" instance=ExtResource("9_jk1qb")]
transform = Transform3D(-0.0217069, 0, 0.58942, 0, 0.245025, 0, -0.58942, 0, -0.0423587, -4.74198, -2.39266, -0.569018)

[node name="Node3D4" parent="Butt_1" instance=ExtResource("9_jk1qb")]
transform = Transform3D(-0.184019, 0, 0.247086, 0, 0.476711, 0, -0.341055, 0, -0.134447, 1.28559, -2.2226, -22.9766)

[node name="Node3D" parent="Butt_1" instance=ExtResource("9_jk1qb")]
transform = Transform3D(0.65, 0, 0, 0, 0.495, 0, 0, 0, 0.908, 16.0535, -2.30693, -5.40257)

[node name="Cube" type="MeshInstance3D" parent="Butt_1"]
transform = Transform3D(0.0261646, 0.765662, 0.237728, -0.0350321, 0.587607, 0.119524, -0.00210889, -0.261687, 0.963949, -0.177781, 0.279367, -0.449067)
mesh = SubResource("ArrayMesh_tbmy8")
skeleton = NodePath("")

[node name="AnimationPlayer" type="AnimationPlayer" parent="Butt_1"]
libraries = {
&"": SubResource("AnimationLibrary_k4ulv")
}
autoplay = "Action"

[node name="Butt_1" type="Node3D" parent="Butt_1"]
transform = Transform3D(-0.535399, 0.110134, -0.0905626, 0.473801, 0.12029, -0.176763, -0.047183, -0.0417954, -0.747377, 13.7152, 3.03307, -19.352)

[node name="Cube" type="MeshInstance3D" parent="Butt_1/Butt_1"]
transform = Transform3D(-0.0269118, 0.696694, 0.369694, -0.0264776, -0.717285, 0.345914, 0.0221578, -0.0109524, 0.862363, -0.262794, 0.415932, -0.467409)
mesh = SubResource("ArrayMesh_tbmy8")
skeleton = NodePath("")

[node name="AnimationPlayer" type="AnimationPlayer" parent="Butt_1/Butt_1"]
libraries = {
&"": SubResource("AnimationLibrary_k4ulv")
}
autoplay = "Action"

[node name="Node3D5" parent="Butt_1" instance=ExtResource("10_5dd4i")]
transform = Transform3D(6.24893, 0, 0, 0, 4.75988, 0, 0, 0, 8.73113, -10.597, -3.9928, -27.8815)

[node name="Node3D6" parent="Butt_1" instance=ExtResource("10_5dd4i")]
transform = Transform3D(8.204, -3.80422e-07, -9.99708e-22, 6.55668e-07, 4.76, -1.42374e-21, 5.12056e-22, 4.23113e-22, 16.017, 27.5366, -2.73825, 26.3878)

[connection signal="pressed" from="Control/Button" to="." method="start_game"]
